{
  "name": "joycss",
  "description": "wise css sprite tool by node and gd",
  "keywords": [
    "css",
    "sprite"
  ],
  "author": {
    "name": "Eward Song",
    "email": "hanwen.sah@taobao.com"
  },
  "contributors": [],
  "version": "0.5.4",
  "repository": {
    "type": "git",
    "url": "git://github.com/shepherdwind/joycss.git"
  },
  "bin": {
    "joycss": "./bin/joycss"
  },
  "dependencies": {
    "shelljs": "~0.1.2",
    "commander": "~1.1.1",
    "osenv": "~0.0.3"
  },
  "main": "./lib/index",
  "engines": {
    "node": ">=0.8"
  },
  "readme": "joycss \n======\n[![NPM version](https://badge.fury.io/js/joycss.png)](http://badge.fury.io/js/joycss)\n\njoycss是一个基于nodejs的自动拼图工具, 目标：<strong>使用简单，功能强大</strong> 。\n\n文档：[joycss.org](http://joycss.org) 。\n\n###安装\n\n```sh\nnpm install -g joycss\n//update\nnpm update joycss -g\n```\n\n####依赖\n\n每次运行时，joycss会自动检测依赖是否满足，如果检测通过，则没有问题，如果没有通过，\n会提示需要安装相关的依赖。\n\n<strong>joycss使用php cli或者node-gd处理图片，两个随便有一个都行</strong>。php安装需要有gd库，默认\n情况下，php是自带安装gd的。\n\n<strong>通常情况下，php加上gd库比较简单</strong>，在mac下php和gd组合是默认有的，其他平台安装php 还是非常容易的。\n\n####node-gd安装\n\n以mac为例：\n\n```sh\nbrew install gd\nnpm install node-gyp -g\nnpm install -g node-gd\n```\n\nlinux下差不多，不过把brew换成apt-get即可。win下还在研究中，可能有点麻烦，还是装\nphp来来的简单得多。\n\n###使用\n\n```sh\n$ joycss -h\n$ joycss a.css\n$ joycss a.less\n$ joycss a.scss\n$ lessc a.less | joycss -p a.css\n$ joycss *.less\n```\n\n拼图后，生成一个图片文件，图片文件命名规则是css文件名+'-sprite8.png'，文件位置由\ncss中第一个需要拼图的图片路径相同。css命名规则是，css文件名+'.sprite.css'，如果\n输入源为less文件，则生产文件名+'.css'。或者使用，`joycss --source a.css`，生成文\n件为`a.css`，并且产生一个`a.source.css`文件，以后执行`joycss -s a.css`，读取css\n都是`a.source.css`，生成文件为`a.css`。\n\n### [grunt-joycss](https://github.com/shepherdwind/grunt-joycss)使用\n\n继承到grunt中，作为grunt的一个插件，使用：\n\n```js\n$ npm install grunt-joycss --save-dev\n```\n\n```js\ngrunt.initConfig({\n  joycss: {\n    index: {\n      //紧凑拼图\n      options: { layout: 'close' },\n      src: ['test/less/index.less']\n    },\n\n    detail: {\n      //水平布局\n      options: { layout: 'horizontal' },\n      src: ['test/less/detials.less']\n    }\n  }\n});\ngrunt.loadNpmTasks('grunt-joycss');\n```\n\n执行，`grunt joycss`即可，使用`grunt --config`进行配置用户名，使用\n`grunt joycss --debug`查看更多debug信息。\n\n其他参数，和joycss命令行保持一直，不过需要注意的是，多个参数的时候，grunt需要这\n样使用：\n\n```sh\ngrunt joycss --debug=1 --nochange\n```\n\n如果使用`grunt --debug --nonchage`则被解释为`grunt --debug=--nonchange`。\n\n###作为node模块使用\n\n`require('joycss')`返回joycss对象，joycss上有两个对象，`joycss.Event`和`joycss.Mult`，\nEvent对象用于事件发布，成功后，发布一个事件`run:end`。Mult用于处理一组队列，joycss\n使用php处理图片，如果一次执行多个请求需要使用Mult对象，`Mult.add`方法把一个拼图\n任务加入队列，add方法接受两个参数，`args, isAutoRun`。\n\n```\nvar Joycss = require('path/to/joycss');\nnew Joycss(filename, config, text);\n\n//处理多个任务队列\nconfig.each(function(){\n  Joycss.Mult.add([filename, config, text]);\n});\nJoycss.Mult.run();\n```\n\n第一个参数必须传递，后两个可以为空\n\n- `filename` {string} 文件名，绝对路径，css路径地址。\n- `config` 配置方式，参考`./src/index.js`中的defaults对象，用于配置拼图方式和是\n  否使用图片上传等。\n- `text` cssText，如果传入cssText，那么不从文件中读取，并且`filename`为生成的文\n  件名。如果不传递text参数，从filename中读取文件作为css输入。\n\n![joycss](http://joycss.org/joycss.png)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/shepherdwind/joycss/issues"
  },
  "_id": "joycss@0.5.4",
  "_from": "joycss@~0.5.4"
}
